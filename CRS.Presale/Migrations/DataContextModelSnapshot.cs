// <auto-generated />
using System;
using CRS.Presale.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRS.Presale.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CRS.Presale.Domain.PresaleInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("AdditionalData");

                    b.Property<decimal>("BlockNumber")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.Property<string>("BuyerAddress");

                    b.Property<DateTime>("CreationTimestamp");

                    b.Property<decimal>("NrOfCoins")
                        .HasColumnType("decimal(20, 10)");

                    b.Property<decimal>("Price");

                    b.Property<bool>("Referral");

                    b.Property<DateTime?>("SentToTargetTimestamp");

                    b.Property<string>("SentToTargetTxId");

                    b.Property<string>("TargetAddressCoins");

                    b.Property<bool>("TargetAddressValid");

                    b.Property<string>("TxHash");

                    b.HasKey("Id");

                    b.HasIndex("TxHash")
                        .IsUnique()
                        .HasFilter("[TxHash] IS NOT NULL");

                    b.ToTable("PresaleInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
